#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
#

# run startx at login
if [[ $(tty) == /dev/tty1 ]]; then
  exec startx
fi

# No arguments: `git status`
# With arguments: acts like `git`
g() {
  if [[ $# > 0 ]]; then
    hub $@
  else
    hub status --short --branch
  fi
}

al() {
  if [[ $# > 0 ]]; then
    if type $1 > /dev/null; then
      echo "Error: command" $1 "exists" 1>&2
      return 1
    else
      echo alias $1=\"$2\" >> ~/.aliases
    fi
  else
    nvim ~/.aliases
  fi
  source ~/.aliases
}

# auto attach tmux session when shell is opened
_not_inside_tmux() {
  [[ -z "$TMUX" ]]
}

export PATH=$HOME/bin:$PATH

ensure_tmux_is_running() {
  if _not_inside_tmux; then
    tat
  fi
}

ensure_tmux_is_running

# Complete g like git
compdef g=git

source /usr/share/chruby/chruby.sh
source /usr/share/chruby/auto.sh
chruby 2.3.0

em() {
  emacs $1 &> /dev/null &
}

# aliases
if [ -f ~/.aliases ]; then
  source ~/.aliases
fi

# environment variable definitions
if [ -f ~/.aliases ]; then
  source ~/.env_var
fi

SSH_ENV="$HOME/.ssh/environment"

start_agent() {
    echo "Initialising new SSH agent..."
    # >! is zsh-syntax to clobber with noclobber set (>| in bash)
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' >! "${SSH_ENV}"
    echo succeeded
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
    /usr/bin/ssh-add -t 7200;
}

# Source SSH settings, if applicable

if [ -f "${SSH_ENV}" ]; then
  . "${SSH_ENV}" > /dev/null
  #ps ${SSH_AGENT_PID} doesn't work under cywgin
  ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
  start_agent;
}
else
  start_agent;
fi

# syntax highlighting in z shell
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
