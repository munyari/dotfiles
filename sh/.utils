#!/bin/bash
# No arguments: `git status`
# With arguments: acts like `git`
function g() {
  if [[ $# > 0 ]]; then
    hub "$@"
  else
    hub status --short --branch
  fi
}

# edit aliases defined for this shell
function al() {
  alias_file=~/.aliases
  if [[ $# > 0 ]]; then
    if type $1 > /dev/null; then
      echo "Error: command" $1 "exists" 1>&2
      return 1
    else
      echo alias $1=\"$2\" >> "$alias_file"
    fi
  else
    nvim "$alias_file"
  fi
  source "$alias_file"
}

function md_to_pdf() {
  NEW_PDF="${1%.*}".pdf
  if pandoc -t latex -s $1 -o "$NEW_PDF"; then
    zathura "$NEW_PDF" &> /dev/null &
  else
    return 1
  fi
}

function em() {
  emacs $1 &> /dev/null &
}

function weather() {
  curl "http://wttr.in/$1?m"
}

function ssh-aws() {
  ssh -i ~/.ssh/mville.pem ubuntu@"$1"
}

function bzl() {
  mbzl --use-fsnotify "$@"
}

function typecheck() {
  bzl test //metaserver/static/js:all_typecheck_tests
}

function arc-diff() {
  typecheck && \
  bzl test //metaserver/static_tests:package_tests && \
  arc diff --apply-patches "$@" && \
  arc test --update-diff server-selenium && \
  arc test --update-diff server-selective
}

function n() {
  eval "$EDITOR" "$@"
}

function sms() {
  bzl itest-start "$PC" "$@"
}

function sam() {
  bzl itest-stop-all --force "$@"
}

function rms() {
  bzl itest-reload-current "$@" || (sam && sms)
  osascript -e 'display notification "Hooray!" with title "Devbox has finished building!"'
  auto-reload-meta
}

function jest() {
  bzl test //metaserver/static/js/jest --test_arg="$@"
}

function fedex() {
    bzl build //metaserver:dev_static_assets
}

function spectrum-tools() {
  node_modules/.bin/spectrum-tools "$@" || ../node_modules/.bin/spectrum-tools "$@"
}

function land() {
  arc preflight && arc land
}

function tail_metaserver() {
    mbzl itest-exec //services/metaserver:metaserver -- tail -f /tmp/bzl/logs/service_logs/metaserver/metaserver_core/service.log
}

function ips() {
  bzl tool //tools:sqpkg install team/nobody/prod_dump.sqfs && \
  bzl build //tools:prod-data-import-stormcrow && \
  bzl itest-exec //services/metaserver './bazel-bin/tools/prod-data-import-stormcrow'
}
